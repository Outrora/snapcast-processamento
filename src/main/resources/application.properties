video.storage.path=/opt/snapcast/videos
aws.regiao=${AWS_REGION}
aws.bucket.name=${BUCKET}
# Aumentar para 30 minutos (1800 segundos)
quarkus.vertx.max-worker-execute-time=1800s
quarkus.vertx.warning-execute-time=1500s
# Aumentar o pool de workers para processamento paralelo
quarkus.vertx.worker-pool-size=50
# Configurações específicas para processamento batch
quarkus.thread-pool.max-threads=50
quarkus.thread-pool.queue-size=100
quarkus.devservices.enabled=false
# Configurações de logging
quarkus.log.level=INFO
#Receber Video
mp.messaging.incoming.video-uploads.connector=smallrye-kafka
mp.messaging.incoming.video-uploads.bootstrap.servers=${KAFKA_URL}
mp.messaging.incoming.video-uploads.auto.offset.reset=earliest
mp.messaging.incoming.video-uploads.enable.auto.commit=false
mp.messaging.incoming.video-uploads.topic=video.uploads
mp.messaging.incoming.video-uploads.group.id=processamento-group
mp.messaging.incoming.video-uploads.client.id=processamento-${quarkus.uuid}
#Atualizar Estado
mp.messaging.outgoing.video-status.connector=smallrye-kafka
mp.messaging.outgoing.video-status.topic=video.status
mp.messaging.outgoing.video-status.bootstrap.servers=${KAFKA_URL}

#Obsevabilidade
quarkus.opentelemetry.enabled=true
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4318
quarkus.opentelemetry.tracer.exporter.otlp.protocol=http/protobuf
quarkus.opentelemetry.tracer.sampler=always_on
quarkus.application.name=snapcast-processamento